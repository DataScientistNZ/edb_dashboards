---
title: "EDB vegetation management analysis"
format: 
  dashboard:
    scrolling: true
    css: styles.css 
    # theme: lumen
    # theme: flatly
    nav-buttons:
    - text: Home
      icon: list
      href: https://datascientistnz.github.io/edb_dashboards/quarto_dashboards/
    - text: Code
      icon: github
      href: https://github.com/DataScientistNZ/edb_dashboards

editor: 
  markdown: 
    wrap: 72
    
fontsize: 13px
---
  
```{r, echo=F}

# round all numeric values to n digits (n=3 by default)
# we do so to allow a nice display
# makes a copy of the input data by default (use copy=F if undesired)
round_all_numeric_values <- function(dt, digits=3, copy=T) {
  if (copy) dt <- data.table(dt)
  for (nm in names(dt)) {
    if (is.numeric(dt[[nm]])) {
      dt[, (nm) := round(get(nm), digits)]
    }
  }
  dt
}

# custom made display of datatable
# displaying a copy of the table (copy made in the rounding function)
my_datatable <- function(dt, ..., digits=3) {
  DT::datatable(round_all_numeric_values(dt, digits=digits), ..., 
                extensions = 'Buttons', options = list(
                  dom = 'Bifrtp', buttons = c('copy', 'csv')))
}

```

# Introduction {scrolling="false"}

```{r, echo=F}

# load resources and set common variables
library(data.table)
library(ggplot2)
source(file.path(here::here(), "R", "00_adhoc_charts.R"))
options(scipen=999)

# load prepared data
dt <- fread(file.path(here::here(), "data", "generic_purpose_edb_data.csv"))

# define generic descriptors
latest_year <- max(dt$disc_yr)
overall_period <- paste0(min(dt$disc_yr), "-", latest_year)


# Add average of any metric per edb over period
time_ft <- "disc_yr"
qualitative_constant_ft <- c("edb", "status", "PAT_peergroup")
dt_edb_avg <- dt[, lapply(.SD, mean, na.rm = TRUE), by = qualitative_constant_ft, 
                 .SDcols = setdiff(names(dt), c(time_ft, qualitative_constant_ft))]

dt_edb_avg[, (time_ft) := overall_period]
setcolorder(dt_edb_avg, names(dt)) 

```

## documentation content

<h5>EDB Vegetation Management</h5>
  
This dashboard aims to explore Electricity Distribution Businesses' data with the objective of comparatively analyse performance, with a specific focus on vegetation management.

The dataset used in this dashboard is the one published by the Commerce Commission that involves ID data gathered from Electricity Distribution Businesses and covers the period `r overall_period`. The raw data can be found [here](https://comcom.govt.nz/regulated-industries/electricity-lines/electricity-distributor-performance-and-data/information-disclosed-by-electricity-distributors).

It uses the following data:

* line_length - total line length of the electrical network
* overhead_length - total overhead length of the electrical network
* nb_connections - number of connections of the network
* opex - total operational expenditures
* vege_mgt_opex - operational expenditures dedicated to vegetation management operations
* veg_saidi - the average duration of planned and unplanned interruptions for customers caused by vegetation
* veg_saifi - the average number of planned and unplanned interruptions for customers caused by vegetation

Let's note that above quantities, when in $, have been calculated in nominal terms. 

Results are often presented twice, once for `r latest_year`, once for the full period `r overall_period`. Metrics presented for the full period are averaged through the period. 

# Benchmarking

## section
<h5>Vegetation management cost benchmarking</h5>

The below presents all results for the vegetation management cost benchmarking, for `r latest_year` or for the full period (`r overall_period`) with a cost normalised using as denominator:

* line_length
* overhead_length

These insights have all been taken directly from the [PAT](https://public.tableau.com/app/profile/commerce.commission/viz/Performanceaccessibilitytool-NewZealandelectricitydistributors-Dataandmetrics/Homepage). To reproduce the below insights (or customise them!), click the link, go to the `Operating expenditure` tab, click on `Vegetation management` and select the appropriate denominator in the `Choose ratio` box.

To clarify, insights from the PAT are presented using the same groups as insights presented in this dashboard, but with different colours.   
From top to bottom:

* Dark green: Intermediate regional EDB
* Light brown: Large EDB with major city
* Salmon: Large EDB with secondary city
* Light blue: Medium Regional EDB
* Teal colour: Medium rural EDB
* Rust colour: Small rural EDB
* Dark Red: Small underground EDB

## section

### latest year {.tabset}

```{r, echo=F}
#| title: by line length [2024]
#| out-width: 50%

knitr::include_graphics(file.path(here::here(), "images", "vege_mgt_cost_by_line_length__2024.png"))

```

```{r, echo=F}
#| title: by overhead length [2024]
#| out-width: 50%

knitr::include_graphics(file.path(here::here(), "images", "vege_mgt_cost_by_overhead_length__2024.png"))

```


### overall period {.tabset}


```{r, echo=F}
#| title: by line length [2015-2024]
#| out-width: 50%

knitr::include_graphics(file.path(here::here(), "images", "vege_mgt_cost_by_line_length__2015-2024.png"))

```

```{r, echo=F}
#| title: by overhead length [2015-2024]
#| out-width: 50%
#| 
knitr::include_graphics(file.path(here::here(), "images", "vege_mgt_cost_by_overhead_length__2015-2024.png"))

```


# vs SAIFI

## section
<h5>Vegetation management opex vs Vegetation SAIFI</h5>

The below presents results for `r latest_year` or for the full period (`r overall_period`) with a cost normalised using as denominator:

* line_length
* overhead_length
* nb_connections
* icp50_line50

Some expectations have been expressed that higher expenses in vegetation management are could bring a lower SAIFI due to vegetation. That's not what is empirically observed in the data, which seems to show, if anything, a positive correlation between vegetation management expenditure and interruptions caused by vegetation.

## section

### latest year {.tabset}

```{r, echo=F}
#| title: per line_length

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", y_numerator="veg_mgt_opex", 
                 y_denominator="line_length", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year, x_log_scale=F)

```


```{r, echo=F}
#| title: per overhead_length

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", 
                 y_numerator="veg_mgt_opex", y_denominator="overhead_length", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year, x_log_scale=F)

```


```{r, echo=F}
#| title: per nb_connections

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", 
                 y_numerator="veg_mgt_opex", y_denominator="nb_connections", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year, x_log_scale=F)


```

```{r, echo=F}
#| title: per icp50_line50

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", 
                 y_numerator="veg_mgt_opex", y_denominator="icp50_line50", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year, x_log_scale=F)

```

### overall period {.tabset}

```{r, echo=F}
#| title: per line_length

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", 
                 y_numerator="veg_mgt_opex", y_denominator="line_length", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period, x_log_scale=F)

```

```{r, echo=F}
#| title: per overhead_length

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", 
                 y_numerator="veg_mgt_opex", y_denominator="overhead_length", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period, x_log_scale=F)

```

```{r, echo=F}
#| title: per nb_connections

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", 
                 y_numerator="veg_mgt_opex", y_denominator="nb_connections", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period, x_log_scale=F)


```

```{r, echo=F}
#| title: per icp50_line50

my_scatter_gplot(data.table(dt)[veg_saifi == 0, veg_saifi := 0.001][], x_var="veg_saifi", 
                 y_numerator="veg_mgt_opex", y_denominator="icp50_line50", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period, x_log_scale=F)

```


# vs SAIDI

## section
<h5>Vegetation management opex vs Vegetation SAIDI</h5>

The below presents results for `r latest_year` or for the full period (`r overall_period`) with a cost normalised using as denominator:

* overhead_length
* line_length
* nb_connections
* icp50_line50

Some expectations have been expressed that higher expenses in vegetation management are could bring a lower SAIDI due to vegetation. That's not what is empirically observed in the data, which seems to show, if anything, a positive correlation between vegetation management expenditure and interruptions caused by vegetation.

## section

### latest year {.tabset}


```{r, echo=F}
#| title: per overhead_length

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", 
                 y_numerator="veg_mgt_opex", y_denominator="overhead_length", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year)

```


```{r, echo=F}
#| title: per line_length

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", y_numerator="veg_mgt_opex", 
                 y_denominator="line_length", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year)

```

```{r, echo=F}
#| title: per nb_connections

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", y_numerator="veg_mgt_opex", y_denominator="nb_connections", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year)


```

```{r, echo=F}
#| title: per icp50_line50

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", y_numerator="veg_mgt_opex", y_denominator="icp50_line50", 
                 groupby="PAT_peergroup", plot_disc_yr=latest_year)

```

### overall period {.tabset}


```{r, echo=F}
#| title: per overhead_length

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", 
                 y_numerator="veg_mgt_opex", y_denominator="overhead_length", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period)

```


```{r, echo=F}
#| title: per line_length

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", 
                 y_numerator="veg_mgt_opex", y_denominator="line_length", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period)

```

```{r, echo=F}
#| title: per nb_connections

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", 
                 y_numerator="veg_mgt_opex", y_denominator="nb_connections", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period)


```

```{r, echo=F}
#| title: per icp50_line50

my_scatter_gplot(data.table(dt)[veg_saidi < 1, veg_saidi := 1][], x_var="veg_saidi", 
                 y_numerator="veg_mgt_opex", y_denominator="icp50_line50", 
                 groupby="PAT_peergroup", plot_disc_yr=overall_period)

```

# Quality quadrants

## section

The presumed cost vs quality trade-off can be displayed in terms of quadrants.
We arbitrarily split EDBs at the median value for both the cost and the quality, forming four quadrants:

* bottom left: low cost high reliability - presumed good value for consumers
* top right: high cost low reliability - presumed poor value for consumers 
* bottom right: low cost low reliability 
* top left: high cost high reliability

The cost vs quality trade-off is presented on the below for different normalisation of the vegetation management cost (by overhead length or by total line length) and for different definition of quality (saifi or saidi).

## section

### latest year {.tabset}

```{r, echo=F}
#| title: quadrant chart

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])
```

### overall period {.tabset}
```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```

```{r, echo=F}
#| title: quadrant chart (log scale)

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])

```


## section

### latest year {.tabset}

```{r, echo=F}
#| title: quadrant chart

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])
```

### overall period {.tabset}
```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```

```{r, echo=F}
#| title: quadrant chart (log scale)

x_var <- "veg_saifi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])

```


## section

### latest year {.tabset}

```{r, echo=F}
#| title: quadrant chart

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])
```

### overall period {.tabset}
```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```

```{r, echo=F}
#| title: quadrant chart (log scale)

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "overhead_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])

```

## section

### latest year {.tabset}

```{r, echo=F}
#| title: quadrant chart

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt[disc_yr == latest_year])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = latest_year) +
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") +
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black")
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])
```

### overall period {.tabset}
```{r, echo=F}
#| title: quadrant chart (log)

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup", x_log_scale=F) +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```

```{r, echo=F}
#| title: quadrant chart (log scale)

x_var <- "veg_saidi"
y_numerator <- "veg_mgt_opex"
y_denominator <- "line_length"

my_dt <- data.table(dt_edb_avg[disc_yr == overall_period])
my_dt[veg_saifi == 0, veg_saifi := 0.001]
my_dt[veg_saidi < 1, veg_saidi := 1]
x_median_val <- median(my_dt[[x_var]], na.rm = T)
y_median_val <- median(my_dt[[y_numerator]]/my_dt[[y_denominator]], na.rm = T)
my_simple_scatter_gplot(my_dt, x_var=x_var, y_numerator=y_numerator, 
                        y_denominator=y_denominator, groupby="PAT_peergroup") +
  labs(subtitle = overall_period) + 
  scale_y_continuous() +
  geom_vline(xintercept = x_median_val, linetype = "dashed", color = "black") + 
  geom_hline(yintercept = y_median_val, linetype = "dashed", color = "black") 
```


```{r, echo=F}
#| title: underlying data

my_dt[get(x_var) > x_median_val, x_cat := "low reliability"]
my_dt[get(x_var) <= x_median_val, x_cat := "high reliability"]
my_dt[get(y_numerator) / get(y_denominator) > y_median_val, y_cat := "high cost"]
my_dt[get(y_numerator) / get(y_denominator) <= y_median_val, y_cat := "low cost"]
my_dt[, quadrant := paste0(y_cat, " | ", x_cat)]
# my_datatable(my_dt[, c("edb", "quadrant"), with=F])

dt_wide <- dcast(my_dt, rowid(quadrant) ~ quadrant, value.var = "edb")
my_datatable(dt_wide[, -"quadrant", with=F])

```


