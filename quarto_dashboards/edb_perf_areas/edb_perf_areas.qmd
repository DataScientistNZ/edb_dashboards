---
title: "EDB performance areas"
format: 
  dashboard:
    scrolling: true 
    # theme: lumen
    # theme: flatly
    nav-buttons:
    - text: Home
      icon: list
      href: https://datascientistnz.github.io/edb_dashboards/quarto_dashboards/edb_perf_areas
    - text: Code
      icon: github
      href: https://github.com/DataScientistNZ/edb_dashboards

editor: 
  markdown: 
    wrap: 72
    
fontsize: 13px
---
  
```{r, echo=F}

# round all numeric values to n digits (n=3 by default)
# we do so to allow a nice display
# makes a copy of the input data by default (use copy=F if undesired)
round_all_numeric_values <- function(dt, digits=3, copy=T) {
  if (copy) dt <- data.table(dt)
  for (nm in names(dt)) {
    if (is.numeric(dt[[nm]])) {
      dt[, (nm) := round(get(nm), digits)]
    }
  }
  dt
}

# custom made display of datatable
# displaying a copy of the table (copy made in the rounding function)
my_datatable <- function(dt, ..., digits=3) {
  DT::datatable(round_all_numeric_values(dt, digits=digits), ..., 
                extensions = 'Buttons', options = list(
                  dom = 'Bifrtp', buttons = c('copy', 'csv')))
}

```

# Introduction {scrolling="false"}

```{r, echo=F}

# load resources and set common variables
library(data.table)
library(ggplot2)
source(file.path(here::here(), "R", "00_echarts.R"))
options(scipen=999)

# load prepared data
dt <- fread(file.path(here::here(), "data", "generic_purpose_edb_data.csv"))

# define generic descriptors
latest_year <- max(dt$disc_yr)
overall_period <- paste0(min(dt$disc_yr), "-", latest_year)

# these charts should ideally be rewritten with echarts4r to facilitate reading
# lack of time and priorities on quantity rather than quality means it's unlikely to
# happen in the foreseeable future
# define scatter chart we'll keep using everywhere
my_scatter_gplot <- function(dt, x_var, y_numerator, y_denominator, groupby, 
                             plot_disc_yr, title=NULL) {
  dt_plot <- data.table(dt)[, `:=`(metric = get(y_numerator)/get(y_denominator), 
                                   x = get(x_var))][,  c("disc_yr", "edb", groupby,
                                                         "x", "metric"), with=F]
  dt_plot2 <- dt_plot[, .(x = mean(x), metric = mean(metric)), 
                      by=c("edb", groupby)][, disc_yr := overall_period]
  dt_plot <- rbind(dt_plot, dt_plot2)
  
  p <- ggplot(dt_plot[disc_yr == plot_disc_yr],
              aes(x = x, y = metric)) +
    geom_point(aes(color=get(groupby)), size=2, alpha=0.8) +
    theme_minimal() +
    ylab(paste0(y_numerator, " / ", y_denominator)) + 
    ylim(c(0, NA)) + 
    xlab(x_var) +
    ggrepel::geom_text_repel(aes(label=edb, color=get(groupby)), size=3, alpha=0.8, show.legend=FALSE) +
    # geom_smooth(method = "lm", se = FALSE, color = "black", alpha=0.1) +
    labs(title = "geom_text_repel()", alpha=0.8) +
    theme(legend.title = element_blank())
  if (!x_var %in% c("density")) p <- p + coord_trans(x='log10')
  if (!is.null(title)) {
    p <- p + ggtitle(title)
  } else {
    p <- p + ggtitle(paste0(y_numerator, " / ", y_denominator, "   (", plot_disc_yr, ")"))
  }
  p
}

# define bar chart we'll keep using everywhere
my_bar_gplot <- function(dt, y_numerator, y_denominator=NULL, groupby, plot_disc_yr, flipped_axes=T) {
  
  if (!is.null(y_denominator)) {
    dt_plot <- data.table(dt)[, `:=`(metric = get(y_numerator)/get(y_denominator))
                              ][,  c("disc_yr", "edb", groupby, "metric"), with=F]
  } else {
    dt_plot <- data.table(dt)[, `:=`(metric = get(y_numerator))][,  c("disc_yr", "edb", groupby, "metric"), with=F]
  }
  
  dt_plot2 <- dt_plot[, .(metric = mean(metric)), 
                      by=c("edb", groupby)][, disc_yr := overall_period]
  dt_plot <- rbind(dt_plot, dt_plot2)
  # hack to have desired order
  dt_plot[ , my_order := match(get(groupby), sort(unique(dt_plot[[groupby]]))) * 1000000 + metric]
  
  dt_plot <- dt_plot[order(my_order)]
  
  if (flipped_axes) {
    p <- ggplot(dt_plot[disc_yr == plot_disc_yr], 
           aes(x = metric, y = reorder(edb, my_order, desc=T), fill = get(groupby))) +
      theme_minimal() + 
      theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        axis.text.y = element_text(margin = margin(r = -8))
      )
  } else {
    p <- ggplot(dt_plot[disc_yr == plot_disc_yr], 
                aes(y = metric, x = reorder(edb, my_order, desc=T), fill = get(groupby))) +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + 
      theme(
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.text.x = element_text(margin = margin(r = 8))
      )
  }
  
  p <- p + geom_bar(stat = "identity", alpha=0.8, position = position_dodge()) + 
    labs(
      # title = paste0(y_numerator, " / ", y_denominator, "   (", plot_disc_yr, ")"),
      x = "",
      y = "",
      fill = "")
  
  if (!is.null(y_denominator)) {
    p <- p + ggtitle(paste0(y_numerator, " / ", y_denominator, "   (", plot_disc_yr, ")"))
  } else {
    p <- p + ggtitle(paste0(y_numerator, "   (", plot_disc_yr, ")"))
  }
  
  p
}

```

## documentation content

<h5>EDB Performance Areas</h5>
  

This dashboard aims to explore Electricity Distribution Businesses' data with the objective of comparatively analyse performance, with an emphasis on a few focus areas:

* Network Utilisation
* Vegetation Management
* (To be decided) ... ?

The dataset used in this dashboard is the one published by the Commerce Commission that involves ID data gathered from Electricity Distribution Businesses and covers the period `r overall_period`. The raw data can be found [here](https://comcom.govt.nz/regulated-industries/electricity-lines/electricity-distributor-performance-and-data/information-disclosed-by-electricity-distributors).

It uses the following data:

* line_length - total line length of the electrical network
* nb_connections - number of connections of the network
* icp50_line50 - geometric mean of the number of connections and the line length, i.e. nb_connections^0.5 * line_length^0.5 
* network_utilisation - see below
* veg_mgmt - operational expenditures that relate to vegetation management

The network utilisation data has been prepared as per the methodology described [in this dashboard](https://datascientistnz.github.io/edb_dashboards/quarto_dashboards/network_utilisation/). Let's mention that Scanpower is fully missing as did not fill any data regarding substations' peak load and capacity. Some other data issues and how it has been mitigated is covered in the other dashboard ([Data Issues tab](https://datascientistnz.github.io/edb_dashboards/quarto_dashboards/network_utilisation/#data-issues)).


# Network Utilisation benchmark

## section
<h5>Network Utilisation  benchmarking</h5>

The below presents results for `r latest_year` or for the full period (`r overall_period`).


## section

### latest_year

```{r, echo=F}

my_bar_gplot(dt, y_numerator="network_utilisation", groupby="PAT_peergroup", plot_disc_yr=latest_year)

```

### overall_period

```{r, echo=F}

my_bar_gplot(dt, y_numerator="network_utilisation", groupby="PAT_peergroup", plot_disc_yr=overall_period)

```

## section

### latest_year

```{r, echo=F}

my_bar_gplot(dt, y_numerator="network_utilisation", groupby="PAT_peergroup", plot_disc_yr=latest_year, flipped_axes = F)

```

### overall_period

```{r, echo=F}

my_bar_gplot(dt, y_numerator="network_utilisation", groupby="PAT_peergroup", plot_disc_yr=overall_period, flipped_axes = F)

```



# Network Utilisation time series

## section
<h5>Network Utilisation time series</h5> - organised by status (NonExempt vs Exempt).




## section

### left

```{r, echo=F}

field <- "network_utilisation"
my_status <- "NonExempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ") - curated"))


```


### right

```{r, echo=F}

my_status <- "Exempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ") - curated"))

```

## section
<h5>Network Utilisation time series</h5> - organised by peer group.

## section

### left

```{r, echo=F}

my_peergroup <- "Large EDB with major city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ") - curated"))

```

### middle

```{r, echo=F}

my_peergroup <- "Large EDB with secondary city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ") - curated"))

```

### right

```{r, echo=F}

my_peergroup <- "Medium regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ") - curated"))

```

## section

### left

```{r, echo=F}

my_peergroup <- "Intermediate Regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ") - curated"))

```

### middle

```{r, echo=F}

my_peergroup <- "Medium rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ") - curated"))

```


### right

```{r, echo=F}

my_peergroup <- "Small underground EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ") - curated"))

```

## section

```{r, echo=F}
#| width: 34%

my_peergroup <- "Small rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ") - curated"))

```


# Vegetation management benchmark

## section
<h5>Vegetation management opex benchmark</h5>

This content is already available in the [PAT](https://public.tableau.com/app/profile/commerce.commission/viz/Performanceaccessibilitytool2023-NewZealandelectricitydistributors-2023Update-draft/Homepage?publish=yes). This PAT update has been temporarily created to allow users to normalise any cost as per this analysis (including by the geometric mean of line_length and number of customers, i.e. icp50_line50). The next official update of the PAT which will include the 2024 data is expected to also include these changes.

To create the corresponding benchmark, go to the opex tab, click on vegetation management expense, and pick the appropriate denominator (number of customer, line length or the combination of the two). You can also pick the grouping you think is appropriate. 


# Vegetation management time series

## section
<h5>Vegetation management time series</h5>

The below presents time series results with a cost normalised using as denominator:

* icp50_line50
* nb_connections
* line_length

```{r, echo=F}
# ugly to save these fields like that but also more simple...
field <- "veg_mgt_opex"
dt[, (paste0(field, " / ", "icp50_line50")) := get(field) / icp50_line50]
dt[, (paste0(field, " / ", "nb_connections")) := get(field) / nb_connections]
dt[, (paste0(field, " / ", "line_length")) := get(field) / line_length]

```

## section
<h5>Exempt & non Exempt grouping</h5>

## section

### left {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_status <- "NonExempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_status <- "NonExempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_status <- "NonExempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ")"))
```


### right {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_status <- "Exempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_status <- "Exempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_status <- "Exempt"
eplot_line(dt[status == my_status], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_status, ")"))
```

## section
<h5>PAT peer grouping</h5>

## section

### left {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_peergroup <- "Large EDB with major city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_peergroup <- "Large EDB with major city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_peergroup <- "Large EDB with major city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

### middle {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_peergroup <- "Large EDB with secondary city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_peergroup <- "Large EDB with secondary city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_peergroup <- "Large EDB with secondary city"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

### right {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_peergroup <- "Medium regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_peergroup <- "Medium regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_peergroup <- "Medium regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

## section

### left {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_peergroup <- "Intermediate Regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_peergroup <- "Intermediate Regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_peergroup <- "Intermediate Regional EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

### middle {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_peergroup <- "Medium rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_peergroup <- "Medium rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_peergroup <- "Medium rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

### right {.tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_peergroup <- "Small underground EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_peergroup <- "Small underground EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_peergroup <- "Small underground EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```


## section

### left {width=34% .tabset}

```{r, echo=F}
#| title: per icp50_line50
field <- paste0("veg_mgt_opex", " / ", "icp50_line50")
my_peergroup <- "Small rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per nb_connections
field <- paste0("veg_mgt_opex", " / ", "nb_connections")
my_peergroup <- "Small rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```

```{r, echo=F}
#| title: per line_length
field <- paste0("veg_mgt_opex", " / ", "line_length")
my_peergroup <- "Small rural EDB"
eplot_line(dt[PAT_peergroup == my_peergroup], x = "disc_yr", y = field, groupby = "edb") |>
  e_legend(
    orient = 'vertical',
    right = 0,
    top = "middle"
  ) |>
  e_grid(right = 200, left=50, bottom=30) |>
  e_title(paste0(field, " (", my_peergroup, ")"))
```
